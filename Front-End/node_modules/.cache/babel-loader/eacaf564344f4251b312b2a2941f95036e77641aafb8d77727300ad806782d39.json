{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documentos/sextosemestre/ingenieria/practicas/repo-fong/Ing-Software-2024-1/Front-End/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [correo, setCorreo] = useState('');\n  const [contrasenia, setContrasenia] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append('Correo', correo);\n    data.append('Contrasenia', contrasenia);\n    try {\n      const response = await fetch('http://localhost:5000/login', {\n        method: 'POST',\n        body: data\n      });\n      if (response.ok) {\n        // Inicio de sesión exitoso, redirige al usuario a la página de bienvenida\n        const usuarioResponse = await fetch('http://localhost:5000/get-usuario'); // Debes configurar esta ruta en tu servidor Flask\n        const usuarioData = await usuarioResponse.json();\n        if (usuarioResponse.ok) {\n          // Muestra la página de bienvenida con el nombre de usuario\n          window.location.href = '/Bienvenida';\n        } else {\n          setMensaje('Error al obtener el nombre de usuario');\n        }\n      } else {\n        // Muestra el mensaje de error en el formulario\n        setMensaje('Credenciales incorrectas');\n      }\n    } catch (error) {\n      console.error('Error al procesar la solicitud:', error);\n      setMensaje('Error de red. Inténtalo de nuevo.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Correo\",\n        value: correo,\n        onChange: e => setCorreo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: contrasenia,\n        onChange: e => setContrasenia(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), mensaje && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"vOjysZGK8LoryiROraiSGmyBx0Y=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","correo","setCorreo","contrasenia","setContrasenia","mensaje","setMensaje","handleSubmit","e","preventDefault","data","FormData","append","response","fetch","method","body","ok","usuarioResponse","usuarioData","json","window","location","href","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/ubuntu/Documentos/sextosemestre/ingenieria/practicas/repo-fong/Ing-Software-2024-1/Front-End/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Login() {\n  const [correo, setCorreo] = useState('');\n  const [contrasenia, setContrasenia] = useState('');\n  const [mensaje, setMensaje] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const data = new FormData();\n    data.append('Correo', correo);\n    data.append('Contrasenia', contrasenia);\n\n    try {\n        const response = await fetch('http://localhost:5000/login', {\n          method: 'POST',\n          body: data,\n        });\n      \n        if (response.ok) {\n          // Inicio de sesión exitoso, redirige al usuario a la página de bienvenida\n          const usuarioResponse = await fetch('http://localhost:5000/get-usuario'); // Debes configurar esta ruta en tu servidor Flask\n          const usuarioData = await usuarioResponse.json();\n      \n          if (usuarioResponse.ok) {\n            // Muestra la página de bienvenida con el nombre de usuario\n            window.location.href = '/Bienvenida';\n          } else {\n            setMensaje('Error al obtener el nombre de usuario');\n          }\n        } else {\n          // Muestra el mensaje de error en el formulario\n          setMensaje('Credenciales incorrectas');\n        }\n      } catch (error) {\n        console.error('Error al procesar la solicitud:', error);\n        setMensaje('Error de red. Inténtalo de nuevo.');\n      }\n  };\n\n  return (\n    <div>\n      <h2>Iniciar Sesión</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          placeholder=\"Correo\"\n          value={correo}\n          onChange={(e) => setCorreo(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Contraseña\"\n          value={contrasenia}\n          onChange={(e) => setContrasenia(e.target.value)}\n        />\n        <button type=\"submit\">Iniciar Sesión</button>\n      </form>\n      {mensaje && <p>{mensaje}</p>}\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,IAAI,CAACE,MAAM,CAAC,QAAQ,EAAEX,MAAM,CAAC;IAC7BS,IAAI,CAACE,MAAM,CAAC,aAAa,EAAET,WAAW,CAAC;IAEvC,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACf;QACA,MAAMC,eAAe,GAAG,MAAMJ,KAAK,CAAC,mCAAmC,CAAC,CAAC,CAAC;QAC1E,MAAMK,WAAW,GAAG,MAAMD,eAAe,CAACE,IAAI,CAAC,CAAC;QAEhD,IAAIF,eAAe,CAACD,EAAE,EAAE;UACtB;UACAI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,aAAa;QACtC,CAAC,MAAM;UACLjB,UAAU,CAAC,uCAAuC,CAAC;QACrD;MACF,CAAC,MAAM;QACL;QACAA,UAAU,CAAC,0BAA0B,CAAC;MACxC;IACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDlB,UAAU,CAAC,mCAAmC,CAAC;IACjD;EACJ,CAAC;EAED,oBACER,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhC,OAAA;MAAMiC,QAAQ,EAAExB,YAAa;MAAAmB,QAAA,gBAC3B5B,OAAA;QACEkC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,QAAQ;QACpBC,KAAK,EAAEjC,MAAO;QACdkC,QAAQ,EAAG3B,CAAC,IAAKN,SAAS,CAACM,CAAC,CAAC4B,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFhC,OAAA;QACEkC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,eAAY;QACxBC,KAAK,EAAE/B,WAAY;QACnBgC,QAAQ,EAAG3B,CAAC,IAAKJ,cAAc,CAACI,CAAC,CAAC4B,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACFhC,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACNzB,OAAO,iBAAIP,OAAA;MAAA4B,QAAA,EAAIrB;IAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAAC9B,EAAA,CA5DQD,KAAK;AAAAsC,EAAA,GAALtC,KAAK;AA8Dd,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}